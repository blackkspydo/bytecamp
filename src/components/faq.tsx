/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/mTHa7hblsmi
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */
import { Button } from "@/components/ui/button";
import {
  SheetTrigger,
  SheetTitle,
  SheetHeader,
  SheetContent,
  Sheet,
} from "@/components/ui/sheet";
import {
  AccordionTrigger,
  AccordionContent,
  AccordionItem,
  Accordion,
} from "@/components/ui/accordion";

import React from "react";
import { MilestoneIcon } from "lucide-react";

const DATA = [
  {
    category: "General information",
    items: [
      {
        question: "What is the purpose of education?",
        answer:
          "Education is vital for learning essential life skills and expanding knowledge to improve oneself and society.",
      },
      {
        question: "What are the different levels of education?",
        answer:
          "The levels of education typically include primary, secondary, tertiary (or higher education), and continuing education.",
      },
    ],
  },
  {
    category: "Admissions",
    items: [
      {
        question: "How do I apply for college/university?",
        answer:
          "Applying for college/university usually involves submitting an application form, academic transcripts, standardized test scores, and personal essays.",
      },
      {
        question: "What financial aid options are available for students?",
        answer:
          "Financial aid options for students include scholarships, grants, student loans, and work-study programs.",
      },
    ],
  },
  {
    category: "Study tips",
    items: [
      {
        question: "How can I improve my study habits?",
        answer:
          "Improving study habits can involve creating a consistent schedule, setting goals, and using effective learning strategies like active recall and spaced repetition.",
      },
      {
        question: "What are some effective note-taking strategies?",
        answer:
          "Effective note-taking strategies include the Cornell method, mind mapping, outlining, and the use of digital tools to organize and review notes.",
      },
    ],
  },
];

export function FAQ() {
  return (
    <>
      <Sheet>
        <SheetTrigger asChild>
          <Button
            className="fixed left-0 top-20 block md:hidden"
            variant="outline"
          >
            <MilestoneIcon className="h-4 w-4" />
            <span className="sr-only">Open Table of Contents</span>
          </Button>
        </SheetTrigger>
        <SheetContent side="left">
          <SheetHeader>
            <SheetTitle>Table of Contents</SheetTitle>
          </SheetHeader>
          <div className="grid gap-2 p-4">
            {DATA.map((section, index) => (
              <Button
                key={index}
                className="w-full justify-start text-left"
                variant="ghost"
              >
                {section.category}
              </Button>
            ))}
          </div>
        </SheetContent>
      </Sheet>
      <div className="sm:mx-[30px] flex flex-col md:flex-row">
        <div className="hidden w-full md:block md:w-1/4">
          <h1 className="mb-6 text-5xl font-bold">FAQs</h1>
          <nav className="mb-8">
            <ul className="space-y-2">
              {DATA.map((section, index) => (
                <li key={index}>
                  <Button
                    className="w-full justify-start text-left"
                    variant="ghost"
                  >
                    {section.category}
                  </Button>
                </li>
              ))}
            </ul>
          </nav>
        </div>
        <div className="w-full md:w-3/4">
          {DATA.map((section, index) => (
            <div key={index} className="mb-8">
              <h2 className="mb-4 text-2xl font-semibold">
                {section.category}
              </h2>
              <Accordion className="w-full" collapsible type="single">
                {section.items.map((item, itemIndex) => (
                  <AccordionItem
                    key={itemIndex}
                    value={`item-${index}-${itemIndex}`}
                  >
                    <AccordionTrigger className="!text-left">
                      <span>{item.question}</span>
                    </AccordionTrigger>
                    <AccordionContent className="!text-left">
                      <span className="!text-left">{item.answer}</span>
                    </AccordionContent>
                  </AccordionItem>
                ))}
              </Accordion>
            </div>
          ))}
        </div>
      </div>
    </>
  );
}
